"use strict";
//------------------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.delay = void 0;
/**
 * Convenience method for waiting a given time period (in seconds plus optional milliseconds).
 * Implements the same interface as CTRL function delay().
 * @param seconds Seconds to wait before continuing.
 * @param milliseconds Milliseconds to wait before continuing.
 * @returns Promise - will be resolved after given time interval is elapsed.
 * @see - [CTRL function `delay()`](https://www.winccoa.com/documentation/WinCCOA/latest/en_US/ControlA_D/delay.html?hl=delay)
 * @example
 * ```ts
 * import { WinccoaManager, delay } from 'winccoa-manager';
 * const winccoa = new WinccoaManager();
 *
 * await delay(1, 500); // wait for 1.5 seconds
 * ```
 */
function delay(seconds, milliseconds = 0) {
    return new Promise((resolve) => setTimeout(resolve, seconds * 1000 + milliseconds));
}
exports.delay = delay;
